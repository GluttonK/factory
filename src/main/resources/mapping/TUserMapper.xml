<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nobugs.dao.TUserMapper" >
  <resultMap id="BaseResultMap" type="com.nobugs.entity.TUser" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_userid" property="createUserid" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_userid" property="updateUserid" jdbcType="INTEGER" />
    <result column="user_status" property="userStatus" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_real_name" property="userRealName" jdbcType="VARCHAR" />
    <result column="user_passwd" property="userPasswd" jdbcType="VARCHAR" />
    <result column="user_job_num" property="userJobNum" jdbcType="VARCHAR" />
    <result column="user_phone_num" property="userPhoneNum" jdbcType="CHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="factory_id" property="factoryId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, flag, create_time, create_userid, update_time, update_userid, user_status, user_name, 
    user_real_name, user_passwd, user_job_num, user_phone_num, user_email, role_id, factory_id
  </sql>
  <select id="selectByUnameAndPwd" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where user_name = #{uname}and user_passwd=#{upwd}
  </select>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByUserName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from t_user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nobugs.entity.TUser"
    keyProperty="id" useGeneratedKeys="true" >
    insert into t_user (id, flag, create_time, 
      create_userid, update_time, update_userid, 
      user_status, user_name, user_real_name, 
      user_passwd, user_job_num, user_phone_num, 
      user_email, role_id, factory_id
      )
    values (#{id,jdbcType=INTEGER}, #{flag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{createUserid,jdbcType=INTEGER}, #{updateTime,jdbcType=TIMESTAMP}, #{updateUserid,jdbcType=INTEGER}, 
      #{userStatus,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{userRealName,jdbcType=VARCHAR}, 
      #{userPasswd,jdbcType=VARCHAR}, #{userJobNum,jdbcType=VARCHAR}, #{userPhoneNum,jdbcType=CHAR}, 
      #{userEmail,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, #{factoryId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.nobugs.entity.TUser"
    keyProperty="id" useGeneratedKeys="true" >
    insert into t_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="flag != null" >
        flag,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserid != null" >
        create_userid,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserid != null" >
        update_userid,
      </if>
      <if test="userStatus != null" >
        user_status,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="userRealName != null" >
        user_real_name,
      </if>
      <if test="userPasswd != null" >
        user_passwd,
      </if>
      <if test="userJobNum != null" >
        user_job_num,
      </if>
      <if test="userPhoneNum != null" >
        user_phone_num,
      </if>
      <if test="userEmail != null" >
        user_email,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="factoryId != null" >
        factory_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null" >
        #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null" >
        #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null" >
        #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null" >
        #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userJobNum != null" >
        #{userJobNum,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneNum != null" >
        #{userPhoneNum,jdbcType=CHAR},
      </if>
      <if test="userEmail != null" >
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null" >
        #{factoryId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nobugs.entity.TUser" >
    update t_user
    <set >
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserid != null" >
        create_userid = #{createUserid,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserid != null" >
        update_userid = #{updateUserid,jdbcType=INTEGER},
      </if>
      <if test="userStatus != null" >
        user_status = #{userStatus,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        user_real_name = #{userRealName,jdbcType=VARCHAR},
      </if>
      <if test="userPasswd != null" >
        user_passwd = #{userPasswd,jdbcType=VARCHAR},
      </if>
      <if test="userJobNum != null" >
        user_job_num = #{userJobNum,jdbcType=VARCHAR},
      </if>
      <if test="userPhoneNum != null" >
        user_phone_num = #{userPhoneNum,jdbcType=CHAR},
      </if>
      <if test="userEmail != null" >
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="factoryId != null" >
        factory_id = #{factoryId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nobugs.entity.TUser" >
    update t_user
    set flag = #{flag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_userid = #{createUserid,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_userid = #{updateUserid,jdbcType=INTEGER},
      user_status = #{userStatus,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_real_name = #{userRealName,jdbcType=VARCHAR},
      user_passwd = #{userPasswd,jdbcType=VARCHAR},
      user_job_num = #{userJobNum,jdbcType=VARCHAR},
      user_phone_num = #{userPhoneNum,jdbcType=CHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      factory_id = #{factoryId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>